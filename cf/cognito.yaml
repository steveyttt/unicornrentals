---
AWSTemplateFormatVersion: "2010-09-09"

Description:
  Creates a Cognito User Pool for the Wild Rydes serverless web application workshop

Parameters:
  WebsiteBucket:
    Type: String
    Description: The name for the bucket hosting your website, e.g. 'wildrydes-yourname.'

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Module 1 Details"
        Parameters:
          - WebsiteBucket
    ParameterLabels:
      WebsiteBucket:
        default: "Website Bucket Name"

Resources:

  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: WildRydes
      AliasAttributes:
        - email
      AutoVerifiedAttributes:
        - email

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: WildRydesWeb
      UserPoolId: !Ref UserPool
      GenerateSecret: false

  UpdateConfig:
    Type: "Custom::ConfigFile"
    Properties:
      ServiceToken: !GetAtt UpdateConfigFunction.Arn
      UserPool: !Ref UserPool
      Client: !Ref UserPoolClient
      Region: !Ref "AWS::Region"
      Bucket: !Ref WebsiteBucket

  CognitoConfigRole:
    Type: AWS::IAM::Role
    Properties:

      Path: /wildrydes/
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        -
          PolicyName: CognitoConfig
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Sid: Logging
                Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"
              -
                Sid: Cognito
                Effect: Allow
                Action:
                  - "cognito-idp:CreateUserPool"
                  - "cognito-idp:DeleteUserPool"
                  - "cognito-idp:CreateUserPoolClient"
                  - "cognito-idp:DeleteUserPoolClient"
                Resource: "*"
              -
                Sid: ConfigBucketWriteAccess
                Effect: Allow
                Action:
                  - "s3:PutObject"
                  - "s3:PutObjectAcl"
                  - "s3:PutObjectVersionAcl"
                Resource:
                  - !Sub "arn:aws:s3:::${WebsiteBucket}/*"

  UpdateConfigFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: Copies objects from a source S3 bucket to a destination
      Handler: cognito
      Runtime: go1.x
      Role: !GetAtt CognitoConfigRole.Arn
      Timeout: 120
      Code:
        S3Bucket: lambda-849375858678
        S3Key: cognito.zip